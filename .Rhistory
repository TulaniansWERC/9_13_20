library(stringr)
#define punctuation vector
punct <- strsplit(intToUtf8(c(33:47, 58:64, 91:96)), "")[[1]]
#chase bank uses a restricted set of characters
punct.chase <- punct[c(1,3,4,5,11,15,19,22)]
punct.capitalone <-  c("-", "_", ".", "/", "!", "#", "$", "%", "*", "&", "@")
punct.amex <- c("%", "&", "_", "?", "#", "=", "-")
punct.ATT <- c("_", "-")
# enter the url here:
url <- "123456789101"
# password generating function
password <- function(x)
{
length <- 24 # take length of url minus a random five digit number
random.string <- paste(sample(c(0:9, letters, LETTERS, punct.capitalone), length, replace=TRUE), collapse="") # for that vector add random upper and lower case numbers, with replacement of length "length"
return(random.string) # display the created string
}
# generate 4 possible passwords
rep(password(url), 4)
library(magick)
install.packages("magick")
library(magick)
x <- 15
x + 5
x <- 15
x + 5
y <- (x + 5) / log(4)
log(4)
y <- (x + 5) / log(16)
y <- (x + 5) / (4 * 2)
y <- (x + 1) / (4 * 2)
z <- x + y
load("C:/Users/wpwil/OneDrive - Tulane University/R/TURF/9_13_18/matspat.Rda")
View(matspat)
Spartina <- matspat[1:2, 4, "Cover"]
Spartina <- matspat[1:2, 4, 19]
Spartina <- matspat[1:2 4 19]
Spartina <- matspat[1 2 4 19, :]
Spartina <- matspat[c(1:2 4 19),]
Spartina <- matspat[c(1:2,4,19),]
View(Spartina)
Spartina <- matspat[,c(1:2,4,19)]
write.csv(Spartina,file =  "Spartina.csv")
read.csv("Spartina.csv")
read.csv("Spartina.csv")
x <- 15
x + 5
y <- (x + 1) / (4 * 2)
z <- x + y
Spartina <- read.csv("Spartina.csv")
View(Spartina)
Spartina <- read.csv("Spartina.csv")
View(Spartina)
View(Spartina)
View(Spartina)
hist(Spartina$Smean)
hist(Spartina$Cover)
load("C:/Users/wpwil/OneDrive - Tulane University/R/TURF/9_13_18/alt.Rda")
Alterniflora <- matsalt[,c(1:2 4 19)]
Alterniflora <- matsalt[,c(1:2,4,19)]
write.csv(Alterniflora,"Alterniflora.csv")
Patens <- read.csv("Patens.csv")
Alterniflora <- read.csv("Alterniflora.csv")
Alterniflora <- read.csv("Alterniflora.csv")
hist(Alterniflora$Smean)
hist(Patens$Smean)
hist(Patens$Cover)
hist(Alterniflora$Cover)
hist(Patens$Cover)
hist(Alterniflora$Cover)
hist(Patens$Cover)
Patens <- read.csv("Patens.csv")
Alterniflora <- read.csv("Alterniflora.csv")
View(Alterniflora)
Patens <- read.csv("Patens.csv")
Alterniflora <- read.csv("Alterniflora.csv")
View(Patens)
hist(Alterniflora$Smean)
hist(Patens$Smean)
View(Alterniflora)
Data <- rbind(Alterniflora,Patens)
View(Patens)
boxplot(SpecCode~Smean, data=Data)
boxplot(Smean~SpecCode, data=Data)
boxplot(Tmean~SpecCode, data=Data)
boxplot(Lmean~SpecCode, data=Data)
Patens <- read.csv("Patens.csv")
Alterniflora <- read.csv("Alterniflora.csv")
View(Patens)
hist(Alterniflora$Salinity)
hist(Patens$Salinity)
Data <- rbind(Alterniflora,Patens)
boxplot(Smean~SpecCode, data=Data)
boxplot(Salinity~SpecCode, data=Data)
boxplot(Salinity~Species, data=Data)
boxplot(WaterLevel~Species, data=Data)
boxplot(Salinity~Species, data=Data, ylabel="Salinity")
boxplot(WaterLevel~Species, data=Data, ylabel="Water Level")
boxplot(Salinity~Species, data=Data, ylab="Salinity")
boxplot(WaterLevel~Species, data=Data, ylab="Water Level")
?scatter
?plot
plot(Patens$Salinity,Patens$Cover)
plot(Patens$WaterLevel,Patens$Cover)
plot(Alterniflora$Salinity,Alterniflora$Cover)
t.test(Alterniflora$Salinity,Patens$Salinity)
t.test(Alterniflora$WaterLevel,Patens$WaterLevel)
hist(Patens$WaterLevel)
hist(Alterniflora$WaterLevel)
t.test(Salinity ~ Species, data=Data)
t.test(Salinity ~ Species, data=Data,
var.equal=FALSE,
conf.level=0.95)
t.test(WaterLevel ~ Species, data=Data,
var.equal=FALSE,
conf.level=0.95)
shapiro.test(Alterniflora$Salinity)
shapiro.test(Alterniflora$WaterLevel)
shapiro.test(Patens$WaterLevel)
shapiro.test(Patens$Salinity)
shapiro.test(Alterniflora$Salinity)
shapiro.test(Alterniflora$WaterLevel)
lm(Alterniflora$Salinity, Alterniflora$Cover)
lm(Alterniflora$Salinity ~ Alterniflora$Cover)
Result1 <- t.test(Salinity ~ Species, data=Data)
summary(Result1)
Regression <- lm(Alterniflora$Salinity ~ Alterniflora$Cover)
summary(Regression)
Regression <- lm(Alterniflora$Cover ~ Alterniflora$Salinity)
summary(Regression)
x <- 15
x + 5
x <- 15
x+5
y <- (x + 1) / (4 * 2)
z <- x + y
Patens <- read.csv("Patens.csv")
Alterniflora <- read.csv("Alterniflora.csv")
View(Alterniflora)
hist(Alterniflora$Salinity)
hist(Patens$Salinity)
Data <- rbind(Alterniflora,Patens)
boxplot(Salinity~Species, data=Data, ylab="Salinity")
boxplot(WaterLevel~Species, data=Data, ylab="Water Level")
write.csv(Data, "Data.csv")
View(Patens)
boxplot(Salinity~Species, data=Data, ylab="Salinity")
boxplot(WaterLevel~Species, data=Data, ylab="Water Level")
?plot
plot(Alterniflora$Salinity,Alterniflora$Cover)
t.test(Salinity ~ Species, data=Data)
t.test(WaterLevel ~ Species, data=Data)
Regression <- lm(Alterniflora$Cover ~ Alterniflora$Salinity)
summary(Regression)
# Let's revisit our scatterplot now and fit a regression line to the data.
plot(Alterniflora$Salinity,Alterniflora$Cover)
Patens <- read.csv("Patens.csv")
Alterniflora <- read.csv("Alterniflora.csv")
# Let's revisit our scatterplot now and fit a regression line to the data.
plot(Alterniflora$Salinity,Alterniflora$Cover)
abline(lm(Alterniflora$Cover ~ Alterniflora$Salinity))
?abline
source('C:/Users/wpwil/AppData/Local/Temp/Temp1_TURF_R_intro.zip/TURF_R_intro/password_generator.R')
library(stringr)
#define punctuation vector
punct <- strsplit(intToUtf8(c(33:47, 58:64, 91:96)), "")[[1]]
#chase bank uses a restricted set of characters
punct.chase <- punct[c(1,3,4,5,11,15,19,22)]
punct.capitalone <-  c("-", "_", ".", "/", "!", "#", "$", "%", "*", "&", "@")
punct.amex <- c("%", "&", "_", "?", "#", "=", "-")
punct.ATT <- c("_", "-")
# enter the url here:
url <- "123456789101"
# password generating function
password <- function(x)
{
length <- 24 # take length of url minus a random five digit number
random.string <- paste(sample(c(0:9, letters, LETTERS, punct.capitalone), length, replace=TRUE), collapse="") # for that vector add random upper and lower case numbers, with replacement of length "length"
return(random.string) # display the created string
}
# generate 4 possible passwords
rep(password(url), 4)
4+4
x <- 15
x + 5
y <- (x + 1) / (4 * 2)
z <- x + y
Patens <- read.csv("Patens.csv")
View(Patens)
Alterniflora <- read.csv("Alterniflora.csv")
hist(Alterniflora$Salinity)
View(Alterniflora)
hist(Patens$Salinity)
Data <- rbind(Alterniflora,Patens)
boxplot(Salinity~Species, data=Data, ylab="Salinity")
boxplot(WaterLevel~Species, data=Data, ylab="Water Level")
?plot
plot(Alterniflora$Salinity,Alterniflora$Cover)
t.test(Salinity ~ Species, data=Data)
View(Data)
t.test(Alterniflora$Salinity, Patens$Salinity)
Regression <- lm(Alterniflora$Cover ~ Alterniflora$Salinity)
summary(Regression)
# Let's revisit our scatterplot now and fit a regression line to the data.
plot(Alterniflora$Salinity,Alterniflora$Cover)
abline(lm(Alterniflora$Cover ~ Alterniflora$Salinity))
write.csv(Data, "Data.csv")
x <- 15
x + 5
y <- (x + 1) / (4 * 2)
z <- x + y
Patens <- read.csv("Patens.csv")
Alterniflora <- read.csv("Alterniflora.csv")
hist(Alterniflora$Salinity)
hist(Patens$Salinity)
Plants <- rbind(Alterniflora,Patens)
boxplot(Salinity~Species, data=Plants, ylab="Salinity")
boxplot(WaterLevel~Species, data=Plants, ylab="Water Level")
?plot
plot(Alterniflora$Salinity,Alterniflora$Cover)
t.test(Salinity ~ Species, data=Plants)
t.test(WaterLevel ~ Species, data=Plants)
t.test(Alterniflora$Salinity, Patens$Salinity)
Regression <- lm(Alterniflora$Cover ~ Alterniflora$Salinity)
summary(Regression)
plot(Alterniflora$Salinity,Alterniflora$Cover)
abline(lm(Alterniflora$Cover ~ Alterniflora$Salinity))
write.csv(Plants, "Plants.csv")
library(stringr)
#define punctuation vector
punct <- strsplit(intToUtf8(c(33:47, 58:64, 91:96)), "")[[1]]
#chase bank uses a restricted set of characters
punct.chase <- punct[c(1,3,4,5,11,15,19,22)]
punct.capitalone <-  c("-", "_", ".", "/", "!", "#", "$", "%", "*", "&", "@")
punct.amex <- c("%", "&", "_", "?", "#", "=", "-")
punct.ATT <- c("_", "-")
# enter the url here:
url <- "123456789101"
# password generating function
password <- function(x)
{
length <- 24 # take length of url minus a random five digit number
random.string <- paste(sample(c(0:9, letters, LETTERS, punct.capitalone), length, replace=TRUE), collapse="") # for that vector add random upper and lower case numbers, with replacement of length "length"
return(random.string) # display the created string
}
# generate 4 possible passwords
rep(password(url), 4)
source('C:/Users/wpwil/OneDrive - Tulane University/R/TURF/9_13_18/password_generator.R')
# generate 4 possible passwords
rep(password(url), 4)
library(magick)
